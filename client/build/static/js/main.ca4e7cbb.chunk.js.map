{"version":3,"sources":["components/ProjectCard.jsx","views/Main.jsx","components/ProjectForm.jsx","views/Create.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ProjectCard","props","title","id","status","handleStatus","deadline","useState","color","moment","diff","overdue","className","style","format","onClick","Main","backlog","inprogress","completed","projects","setProjects","toggle","setToggle","useEffect","Axios","get","then","res","data","results","filter","a","sort","b","duedate","catch","err","console","log","changestatus","put","delete","destroyProject","map","i","_id","to","ProjectForm","inputs","handleInputChange","handleSubmit","errors","submitValue","onSubmit","htmlFor","type","onChange","value","name","message","Create","project","setProject","setErrors","e","target","post","navigate","response","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca4e7cbb.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport {useState} from 'react';\r\n\r\nconst ProjectCard = props => {\r\n    const { title, id, status, handleStatus, deadline } = props\r\n\r\n    const[overdue, setOverdue]= useState({\r\n        \r\n            color: moment().diff(moment(deadline)) > 0? 'red' : 'black'\r\n        \r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"card col-10 mx-auto\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\"> {title}</h4>\r\n                \r\n                <p style={overdue}> Due Date: {moment(deadline).format('L')}</p>\r\n\r\n                {\r\n                    status === \"backlog\" ?\r\n                        <div className=\"card-footer\">\r\n                            <button className=\"btn btn-info\" onClick={()=> handleStatus(id,status)}> Start Project</button>\r\n                        </div>\r\n                        : status === \"inprogress\" ?\r\n                            <div className=\"card-footer\">\r\n                                <button className=\"btn btn-success\" onClick={()=> handleStatus(id,status)}>Move To Complete</button>\r\n                            </div>\r\n                            : <div className=\"card-footer\">\r\n                                <button className=\"btn btn-warning\" onClick={()=> handleStatus(id,status)}> Remove Project </button>\r\n                            </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectCard;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst Main = props =>{\r\n    const[projects, setProjects]= useState({\r\n        backlog:[],\r\n        inprogress: [],\r\n        completed: []\r\n    });\r\n\r\n    const[toggle, setToggle] =useState(false);\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:8000/api/projects\")\r\n            .then( res =>{\r\n                setProjects({\r\n                    backlog: res.data.results.filter(a => a.status ===\"backlog\").sort(function(a, b) {return moment(a.duedate).diff(moment(b.duedate));}),\r\n                    inprogress: res.data.results.filter(a => a.status ===\"inprogress\").sort(function(a, b) {return moment(a.duedate).diff(moment(b.duedate));}),\r\n                    completed: res.data.results.filter(a => a.status ===\"completed\").sort(function(a, b) {return moment(a.duedate).diff(moment(b.duedate));}),\r\n                })\r\n\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[toggle])\r\n\r\n    const destroyProject = (id) => {\r\n        Axios.delete(`http://localhost:8000/api/projects/${id}`)\r\n            .then( res =>{\r\n                setToggle(!toggle);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleStatus = (id, status) =>{\r\n        if(status !== \"completed\"){\r\n            var changestatus = {\r\n            status: status === \"backlog\" ? \"inprogress\" : status === \"inprogress\" ? \"completed\" : \"completed\"\r\n        }\r\n\r\n        Axios.put(`http://localhost:8000/api/projects/${id}`, changestatus )\r\n            .then( res =>{\r\n                setToggle(!toggle);\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n        else{\r\n            destroyProject(id)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap justify-content-center col=11 mx-auto\">\r\n            {/* BackLog Div */}\r\n            <div className=\"col-3\">\r\n                <h3> Backlog </h3>\r\n                {\r\n                    projects.backlog.map((a,i) =>{\r\n                        return <ProjectCard key={i} id={a._id} title={a.title} status={a.status} deadline={a.duedate} handleStatus={handleStatus}/>\r\n                    })\r\n                }\r\n            </div>\r\n            {/* In Progress Div */}\r\n            <div className=\"col-3\">\r\n                <h3>In Progress</h3>\r\n                {\r\n                    projects.inprogress.map((a,i) =>{\r\n                        return <ProjectCard key={i} id={a._id} title={a.title} status={a.status} deadline={a.duedate} handleStatus={handleStatus}/>\r\n                    })\r\n                }\r\n            </div>\r\n            {/* Completed Div */}\r\n            <div className=\"col-3\">\r\n                <h3>Completed</h3>\r\n                {\r\n                    projects.completed.map((a,i) =>{\r\n                        return <ProjectCard key={i} id={a._id} title={a.title} status={a.status} deadline={a.duedate} handleStatus={handleStatus}/>\r\n                    })\r\n                }\r\n            </div>\r\n            <Link className=\"btn btn-primary col-5\" to=\"/new\"> Add New Project </Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","\r\n\r\nconst ProjectForm = props =>{\r\n    const {inputs, handleInputChange, handleSubmit, errors, submitValue}= props;\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"col-7 mx-auto\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"title\"> Project Title: </label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleInputChange} value={inputs.title} name=\"title\"/>\r\n                <span className=\"text-danger\"> {errors.title ? errors.title.message: \"\"}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"duedate\"> Due Date: </label>\r\n                <input type=\"date\" className=\"form-control\" onChange={handleInputChange} value={inputs.duedate} name=\"duedate\"/>\r\n                <span className=\"text-danger\"> {errors.duedate ? errors.duedate.message: \"\"}</span>\r\n            </div>\r\n            <input type=\"submit\" value = {submitValue} className=\"btn btn-primary\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm;","import {useState} from 'react';\r\nimport Axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\nimport ProjectForm from '../components/ProjectForm';\r\n\r\nconst Create = props =>{    \r\n    const [project, setProject]= useState({\r\n        title:\"\",\r\n        duedate:\"\"\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        title:\"\",\r\n        duedate:\"\"\r\n    })\r\n\r\n    const handleInputChange = e =>{\r\n        setProject({...project,\r\n        [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        Axios.post(`http://localhost:8000/api/projects/`, project)\r\n            .then(res => navigate('/'))\r\n            .catch(err => err.response.status === 404 ? setErrors(err.response.data.errors):console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to=\"/\"> Back to DashBoard </Link>\r\n        <div className=\"card col-24 mx-auto\">\r\n            \r\n\r\n            <h4 className=\"card-title\">Plan a new Project</h4>\r\n            <ProjectForm inputs={project} handleInputChange={handleInputChange} handleSubmit={handleSubmit} errors={errors} submitValue=\"Plan Your Next Project\" />\r\n        </div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Create;\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router} from '@reach/router';\nimport Main from './views/Main';\nimport Create from './views/Create';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Project Manager</h1>\n      <Router>\n        <Main path=\"/\"/>\n        <Create path=\"/new\"/>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}